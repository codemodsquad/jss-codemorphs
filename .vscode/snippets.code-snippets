{
  "transform": {
    "prefix": "transform",
    "description": "JSCodeshift transform",
    "body": [
      "import { ASTPath, Node, FileInfo, API, Options } from 'jscodeshift'",
      "import pathsInRange from 'jscodeshift-paths-in-range'",
      "",
      "type Filter = (",
      "  path: ASTPath<Node>,",
      "  index: number,",
      "  paths: Array<ASTPath<Node>>",
      ") => boolean",
      "",
      "module.exports = function ${TM_FILENAME_BASE}(",
      "  fileInfo: FileInfo,",
      "  api: API,",
      "  options: Options",
      "): string | null | undefined | void {",
      "  const j = api.jscodeshift",
      "",
      "  const root = j(fileInfo.source)",
      "",
      "  let filter: Filter",
      "  if (options.selectionStart) {",
      "    const selectionStart = parseInt(options.selectionStart)",
      "    const selectionEnd = options.selectionEnd",
      "      ? parseInt(options.selectionEnd)",
      "      : selectionStart",
      "    filter = pathsInRange(selectionStart, selectionEnd)",
      "  } else {",
      "    filter = (): boolean => true",
      "  }",
      "",
      "  return root.toSource()",
      "}",
      ""
    ]
  },
  "fixture": {
    "prefix": "fixture",
    "description": "JSCodeshift transform test fixture",
    "body": [
      "export const input = `",
      "`",
      "",
      "export const options = {",
      "}",
      "",
      "export const expected = `",
      "`"
    ]
  }
}
